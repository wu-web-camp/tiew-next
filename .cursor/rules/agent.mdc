---
alwaysApply: true
---

# Agent Role Rules - Focus on User Experience & Functionality

## Core Development Rules
- Always using npm run build to check the lint
- Always update Readme.md
- Always read agent artifact in .ai directory
- Always add or update agents artifact in .ai directory such as checklist.md, architecture.md and etc.
- Always remove all unused files, imports, functions, and variables
- When create a new page, maintain current design consistency
- Do not change UX and UI if refactor logical

## General Guidelines
- Use TypeScript for all code
- Follow Next.js 15+ best practices
- Use Tailwind CSS v4 for styling
- Implement proper error handling and loading states
- Write clean, readable, and maintainable code
- Use React 19 features appropriately

## User Experience & Accessibility
- Focus on user experience and functionality
- Prioritize accessibility and performance
- Implement proper SEO practices
- Use semantic HTML elements
- Ensure mobile-responsive design
- Follow WCAG guidelines for accessibility
- Write comprehensive tests when applicable

## Code Quality & Style
- Use functional components with hooks
- Prefer composition over inheritance  
- Use meaningful variable and function names
- Keep components small and focused
- Extract reusable logic into custom hooks
- Use proper prop typing with TypeScript interfaces
- Implement proper error handling with try-catch blocks
- Use ESLint rules defined in eslint.config.mjs

## File Organization
- Components in src/components/
- Custom hooks in src/hooks/
- Type definitions in src/types/
- App pages in src/app/ following App Router structure
- Global providers in src/provider/
- Keep related files close together
- Use index.ts files for clean imports when appropriate

## Performance & Optimization
- Use Next.js Image component for optimized images
- Implement code splitting with dynamic imports
- Use React.memo() for expensive components
- Optimize re-renders with useCallback and useMemo
- Implement proper loading states
- Use Suspense boundaries appropriately
- Monitor and optimize Core Web Vitals
- Do not change UX and UI if refactor logical